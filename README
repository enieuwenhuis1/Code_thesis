Author:       Eva Nieuwenhuis
Student ID:   13717405
Group:        Biosystems Data Analysis Group
Course:       Bachelor project biomedical science, UvA

MATHEMATICAL MODEL MULTIPLE MYELOMA
The goal was to make fraction and number models that simulate the interactions
between four cell types in the MM microenvironment: drug-sensitive MM cells
(MMd), resistant MM cells (MMr), osteoblasts (OB) and osteoclasts (OC). All
models used collective interactions and were made in the framework of evolutionary
game theory. The models were utilised to determine the effect of traditional and
adaptive therapy and to study the impact of different inhibitor (IH) strengths,
administration durations and holiday durations on the cell type. In addition,
the IH holiday duration, administration duration and strength were optimised.

To better understand MM microenvironment modelling, the figures from Sartakhti et
al. (2018) (nonlinear) and Sartakhti et al. (2016) (linear) were first attempted
to be reproduced. Both papers did not disclose their code, hence comparison of
the results was not possible.


PYTHON AND LIBRARY VERSION
The models were written in Python code (version 3.11.4) using Atom (version 1.60.0).
Some libraries must be installed to run the codes in the code folder.

Libraries that need to be installed for all nine code files :
* numpy (version 1.25.2)
    - install: python -m pip install numpy==1.25.2
* matplotlib (version 3.7.2)
    - install: python -m pip install matplotlib==3.7.2
* pandas (version 2.2.2)
    - install: python -m pip install pandas==2.2.2
* scipy (version 1.13.1)
    - install: python -m pip install scipy==1.13.1

Extra libraries that need to be installed to run model_S_nonlinear.py and
model_S_linear.py:
* ternary (version 1.0.8)
    - install: python -m pip install ternary==1.0.8
* plotly (version 5.22.0)
    - install: python -m pip install plotly==5.22.0
* kaleido (version 0.2.1)
    - install: python -m pip install kaleido==0.2.1


MODEL WITH NONLINEAR BENEFITS: model_S_nonlinear.py
Model_S_nonlinear.py contains the code of all the mathematical formulas as well
as the code to reproduce the figures from the paper: Game Theory of tumourâ€“Stroma
Interactions in Multiple Myeloma: Effect of Nonlinear Benefits by Sartakhti et al.
(2018). The model is made based on the method section of the paper. The benefits
are nonlinear and there are collective interactions.

MODEL WITH LINEAR BENEFITS: model_S_linear.py
model_S_linear.py contains code of the mathematical formulas and the code to
reproduce some of the figures in the paper: Evolutionary dynamics of tumour-Stroma
interactions in multiple myeloma by Sartakhti et al. (2016). The model is made
based on the method section of the paper. The benefits are linear and there are
collective interactions.

MODEL WITH FRACTIONS: MM_model_fractions.py
MM_model_fractions.py contains the code with the mathematical formulas simulating
the fraction dynamics of the MMd, MMr, OC and OB. It contains code to make figures
showing the effect of the WMMd IH, MMd GF IH and IH combination on the cell
fractions for different administration periods and strengths. In addition, it
contains code to make tables showing the eigenvalues, best administration and
holiday duration and the lowest MM fraction for different interaction matrices.
The IHs only affect the MMd.

MODEL WITH NUMBERS: MM_model_numbers.py
MM_model_numbers.py contains the code with the mathematical formulas simulating
the number dynamics of the MMd, MMr, OC and OB. It contains code to make figures
showing the effect of the WMMd IH, MMd GF IH and IH combination on the cell
numbers for different administration periods and strengths. The IHs only affect
the MMd.

NUMBER MODEL CONVERTED TO A FRACTION MODEL: MM_model_nr_to_frac.py
MM_model_nr_to_frac.py uses the mathematical formulas from MM_model_numbers.py
to simulate the number dynamics and at the end, the numbers are converted to
fractions. Hence the shows the fraction dynamics of the MMd, MMr, OC and OB by a
changing N. It contains code to make figures showing the effect of the WMMd IH,
MMd GF IH and IH combination on the cell fractions for different administration
periods and strengths. The IHs only affect the MMd.

FRACTION MODEL: MM_model_frac_IH_inf.py
MM_model_frac_IH_inf.py contains the code with the mathematical formulas
simulating the fraction dynamics of the MMd, MMr, OC and OB. It contains code to
make figures showing the effect of the WMMd IH, MMd GF IH and IH combination on
the cell fractions for different administration periods and strengths. The IHs
not only affect the MMd but also the OC and OB.

NUMBER MODEL WITHOUT RESISTANCE MUTATIONS: MM_model_nr_IH_inf.py
MM_model_nr_IH_inf.py contains the code with the mathematical formulas simulating
the number dynamics of the MMd, MMr, OC and OB. It contains code to make figures
showing the effect of the WMMd IH, MMd GF IH and IH combination on the cell numbers
for different administration periods and strengths. Furthermore, it contains a
(weighted) optimisation to find the best holiday duration, administration duration
and IH strength simultaneously. The IHs not only affect the MMd but also the OC
and OB.

NUMBER-TO-FRACTION MODEL WITH EXTRA IH INFLUENCES: MM_model_nr_to_frac_IH_inf.py
MM_model_nr_to_frac_IH_inf.py uses mathematical formulas from MM_model_numbers.py
to simulate the number dynamics and at the end, the numbers are converted to
fractions. Hence the shows the fraction dynamics of the MMd, MMr, OC and OB by a
changing N. It contains code to make figures showing the effect of the WMMd IH,
MMd GF IH and IH combination on the cell fractions for different administration
periods and strengths. It also contains an optimisation to find the best holiday
duration, administration duration and IH strength simultaneously. The IHs not only
affect the MMd but also the OC and OB.

NUMBER MODEL WITH RESISTANCE MUTATIONS: MM_model_nr_IH_inf_mutation.py
MM_model_nr_IH_inf_mutation.py contains the code with the mathematical formulas
simulating the number dynamics of the MMd, MMr, OC and OB. The MMd can become MMr
via a mutation that happens at a specified rate. It contains code to make figures
showing the effect of the WMMd IH, the MMd GF IH and IH combination on the cell
numbers for different administration periods and strengths. Furthermore, it
contains a (weighted) optimisation to find the best administration duration,
holiday duration and IH strength simultaneously. The IHs not only affect the MMd
but also the OC and OB.


TEST THE CODES
To test some of the functions in every code file, doc tests are added to the code.
These are automatically run when the specific function is run.


THE DATA
The folder data contains a folder per model with all the generated data that is
used to make figures and tables. The folders data contains are:
* data_model_Sartakhti_nonlinear: contains all the data obtained with the model
                        based on the paper of Sartakhti et al., 2018.
* data_model_Sartakhti_linear: contains all the data obtained with the model
                        based on the paper of Sartakhti et al., 2016.
* data_model_fractions: contains all the data obtained from the model simulating
                        cell type fractions.
* data_model_numbers: contains all the data obtained from the model simulating
                        cell type numbers.
* data_model_nr_to_frac: contains all the data obtained from the model simulating
                        cell type fractions by converting the numbers to
                        fractions.
* data_model_frac_IH_inf: contains all the data obtained from the model simulating
                        cell type fractions whereby extra IH influences were added.
* data_model_nr_IH_inf: contains all the data obtained from the model simulating
                        cell type numbers whereby extra IH influences were added.
* data_model_nr_to_frac_IH_inf: contains all the data obtained from the model
                        simulating cell type fractions by converting the numbers
                        to fractions whereby extra IH influences were added.
* data_model_nr_IH_inf_mutation: contains all the data obtained from the model
                        simulating cell type numbers whereby extra IH influences
                        and a resistance mutation rate were added.


THE VISUALISATION
The folder visualisation contains a folder per model in which all the made figures
are stored. The folders which visualisation contains are:
* results_model_Sartakhti_nonlinear: contains all the reproduced figures of the
                            paper of Sartakhti et al., 2018.
* results_model_Sartakhti_linear: contains all the reproduced figures of the
                            paper of Sartakhti et al., 2016.
* results_model_fractions: contains all the figures obtained from the model
                            simulating cell type fractions.
* results_model_numbers: contains all the figures obtained from the model
                            simulating cell type numbers.
* results_model_nr_to_frac: contains all the data obtained from the model
                            simulating cell-type fractions by converting the
                            numbers to fractions.
* results_model_frac_IH_inf: contains all the figures obtained from the model
                            simulating cell-type fractions whereby extra IH
                            influences were added.
* results_model_nr_IH_inf: contains all the figures obtained from the model
                            simulating cell type numbers whereby extra IH
                            influences were added.
* results_model_nr_to_frac_IH_inf: contains all the data obtained from the model
                            simulating cell-type fractions by converting the
                            numbers to fractions whereby also extra IH influences
                            were added.
* results_model_nr_IH_inf_mutation: contains all the figures obtained from the
                            model simulating cell type numbers whereby extra IH
                            influences and a resistance mutation rate were added.


HOW TO RUN THE CODES
To run the code, the code folder should first be entered. To do this use: cd code.
Then the codes can be run using the following commands.

The nonlinear model and its visualisation, model_S_nonlinear.py:
        - python model_S_nonlinear.py

The linear model and its visualisation, model_S_linear.py:
        - python model_S_linear.py

Model with fractions, MM_model_fractions.py
        - python MM_model_fractions.py

Model with numbers, MM_model_numbers.py
        - python MM_model_numbers.py

Model where numbers are converted to fractions, MM_model_nr_to_frac.py
        - python MM_model_nr_to_frac.py

Fraction model with extra IH influences, MM_model_frac_IH_inf.py
        - python MM_model_frac_IH_inf.py

Number model with extra IH influences, MM_model_nr_IH_inf.py
        - python MM_model_nr_IH_inf.py

Number-to-fraction model with extra IH influences, MM_model_nr_to_frac_IH_inf.py
        - python MM_model_nr_to_frac_IH_inf.py

Number model with a resistance mutation rate, MM_model_nr_IH_inf_mutation.py
        - python MM_model_nr_IH_inf_mutation.py


REFERENCES
* Sartakhti, J. S., Manshaei, M. H., & Archetti, M. (2018). Game Theory of
  tumourâ€“Stroma Interactions in Multiple Myeloma: Effect of nonlinear benefits.
  Games, 9(2), 32. https://doi.org/10.3390/g9020032
* Sartakhti, J. S., Manshaei, M. H., Bateni, S., & Archetti, M. (2016).
  Evolutionary dynamics of tumour-Stroma interactions in multiple myeloma. PLOS
  ONE, 11(12), e0168856. https://doi.org/10.1371/journal.pone.0168856
