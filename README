Author:       Eva Nieuwenhuis
University:   UvA
Student ID:   13717405

MATHEMATICAL MULTIPLE MYELOMA MODEL
The goal was to make a fraction model and a number model that simulate the dynamics
of the multiple myeloma (MM) microenvironment and determine the effect of adaptive
therapy versus traditional therapy. During adaptive therapy the drugs are
administered in short periods with holidays in between and during traditional
therapy the MTD is continuously administered. The models looked at the interactions
via diffusible factors between four cell types: drug-sensitive MM cells (MMd),
resistant MM cells (MMr), osteoblasts (OBs) and osteoclasts (OCs). Both models
simulate a public goods game in the framework of evolutionary game theory with
collective interactions. The impact of an MMd GF inhibitor (IH) and a WMMd IH on
the cell type fractions and numbers are studied for different strengths,
administration durations and holiday durations.

To better understand MM microenvironment modelling, the figures from Sartakhti et
al. (2018) (nonlinear) and Sartakhti et al. (2016) (linear) were first attempted
to be reproduced. Both papers did not disclose their code, hence comparison of
the interpretation was not possible.

PYTHON AND LIBRARY VERSION
The models were written in Python code (version 3.11.4) using Atom (version 1.60.0).
Some libraries need to be installed to run the codes in the code folder.

Libraries for model_S_nonlinear.py and model_S_linear.py:
* numpy (version 1.26.0)
    - install: pip install numpy==1.26.0
* matplotlib (version 3.8.0)
    - install: pip install matplotlib==3.8.0
* pandas (version 2.1.3)
    - install: pip install pandas==2.1.3
* ternary (version 0.1)
    - install: pip install ternary==0.1
* plotly (version 5.18.0)
    - install: pip install plotly==5.18.0
* scipy (version 1.11.4)
    - install: pip install scipy==1.11.4

MM_model_fractions.py:
* numpy (version 1.26.0)
    - install: pip install numpy==1.26.0
* matplotlib (version 3.8.0)
    - install: pip install matplotlib==3.8.0
* pandas (version 2.1.3)
    - install: pip install pandas==2.1.3
* scipy (version 1.11.4)
    - install: pip install scipy==1.11.4

MM_model_numbers.py:
* numpy (version 1.26.0)
    - install: pip install numpy==1.26.0
* matplotlib (version 3.8.0)
    - install: pip install matplotlib==3.8.0
* pandas (version 2.1.3)
    - install: pip install pandas==2.1.3
* scipy (version 1.11.4)
    - install: pip install scipy==1.11.4

MM_model_nr_to_frac.py:
* numpy (version 1.26.0)
    - install: pip install numpy==1.26.0
* matplotlib (version 3.8.0)
    - install: pip install matplotlib==3.8.0
* pandas (version 2.1.3)
    - install: pip install pandas==2.1.3
* scipy (version 1.11.4)
    - install: pip install scipy==1.11.4

MM_model_nr_IH_inf.py:
* numpy (version 1.26.0)
    - install: pip install numpy==1.26.0
* matplotlib (version 3.8.0)
    - install: pip install matplotlib==3.8.0
* pandas (version 2.1.3)
    - install: pip install pandas==2.1.3
* scipy (version 1.11.4)
    - install: pip install scipy==1.11.4

MM_model_frac_IH_inf.py:
* numpy (version 1.26.0)
    - install: pip install numpy==1.26.0
* matplotlib (version 3.8.0)
    - install: pip install matplotlib==3.8.0
* pandas (version 2.1.3)
    - install: pip install pandas==2.1.3
* scipy (version 1.11.4)
    - install: pip install scipy==1.11.4

MM_model_nr_to_frac_IH_inf.py:
* numpy (version 1.26.0)
    - install: pip install numpy==1.26.0
* matplotlib (version 3.8.0)
    - install: pip install matplotlib==3.8.0
* pandas (version 2.1.3)
    - install: pip install pandas==2.1.3
* scipy (version 1.11.4)
    - install: pip install scipy==1.11.4


MODEL WITH NONLINEAR BENEFITS: model_S_nonlinear.py
Model_S_nonlinear.py contains the code of all the mathematical formulas as well as
the code to reproduce the figures from the paper: Game Theory of tumourâ€“Stroma
Interactions in Multiple Myeloma: Effect of Nonlinear Benefits by Sartakhti et al.
(2018). The model is made based on the method section of the paper. The benefits are
nonlinear and there are collective interactions.

TEST THE CODE
To test some of the functions in the model, doc tests are added and automatically
run when the model_S_nonlinear.py code is run.


MODEL WITH LINEAR BENEFITS: model_S_linear.py
model_S_linear.py contains code of the mathematical formulas and the code to
reproduce some of the figures in the paper: Evolutionary dynamics of tumour-Stroma
interactions in multiple myeloma by Sartakhti et al. (2016). The model is made based
on the method section of the paper. The benefits are linear and there are collective
interactions.

TEST THE CODE
To test some of the functions in the model, doc tests are added and automatically
run when the model_S_linear.py code is run.


MODEL WITH FRACTIONS: MM_model_fractions.py
MM_model_fractions.py contains the code with the mathematical formulas simulating
the fraction dynamics of the four cell types MMd, MMr, OCs and OBs in the MM
microenvironment. It contains the code to make the figures showing the effect of
the WMMd IH, the MMd GF IH and a combination at different administration periods
and strengths on the cell type fractions. In addition, it contains code to determine
the drug administration amounts and periods causing the lowest total MM fraction.
Lastly, it also contains code to make tables showing the eigenvalues, best
administration duration, best holiday duration and lowest MM fraction for different
interaction matrices. The IHs only affect the MMd.

TEST THE CODE
To test some of the functions in the model, doc tests are added and automatically
run when the MM_model_fractions.py code is run.


MODEL WITH NUMBERS: MM_model_numbers.py
MM_model_numbers.py contains the code with the mathematical formulas simulating
the number dynamics of the four cell types MMd, MMr, OCs and OBs in the MM
microenvironment. It contains the code to make the figures showing the effect of
the WMMd IH, the MMd GF IH and a combination of different administration periods
and strengths on the cell type numbers. In addition, it also contains code to
determine the drug administration amounts and periods causing the lowest total MM
number. The IHs only affect the MMd.

TEST THE CODE
To test some of the functions in the model, doc tests are added and automatically
run when the MM_model_numbers.py code is run.


NUMBER MODEL CONVERTED TO A FRACTION MODEL: MM_model_nr_to_frac.py
MM_model_nr_to_frac.py uses the mathematical formulas from MM_model_numbers.py to
simulate the number dynamics and at the end, the numbers are converted to fractions.
Hence the shows the fraction dynamics of the four cell types MMd, MMr, OCs and OBs
in the MM microenvironment by a changing N. It contains code to make the figures
showing the effect of the WMMd IH, the MMd GF IH and a combination at different
administration periods and strengths on the cell type fractions. In addition, it
contains code to determine the drug administration amounts and periods causing the
lowest total MM fraction. The IHs only affect the MMd.

TEST THE CODE
To test some of the functions in the model, doc tests are added and automatically
run when the MM_model_nr_to_frac.py code is run.


FRACTION MODEL WITH EXTRA IH INFLUENCES: MM_model_frac_IH_inf.py
MM_model_frac_IH_inf.py contains the code with the mathematical formulas simulating
the fraction dynamics of the four cell types MMd, MMr, OCs and OBs in the MM
microenvironment. It contains the code to make the figures showing the effect of
the WMMd IH, the MMd GF IH and a combination of different administration periods
and strengths on the cell type numbers. In addition, it also contains code to
determine the drug administration amounts and periods causing the lowest total MM
fraction. The IHs not only affect the MMd but also the OC and OB.

TEST THE CODE
To test some of the functions in the model, doc tests are added and automatically
run when the MM_model_frac_IH_inf.py code is run.


NUMBER MODEL WITH EXTRA IH INFLUENCES: MM_model_nr_IH_inf.py
MM_model_nr_IH_inf.py contains the code with the mathematical formulas simulating
the number dynamics of the four cell types MMd, MMr, OCs and OBs in the MM
microenvironment. It contains the code to make the figures showing the effect of
the WMMd IH, the MMd GF IH and a combination of different administration periods
and strengths on the cell type numbers. In addition, it also contains code to
determine the drug administration amounts and periods causing the lowest total MM
number. Furthermore contains an optimisation strategy to find the best holiday
duration, administration duration and IH strength simultaneously. The IHs not only
affect the MMd but also the OC and OB.

TEST THE CODE
To test some of the functions in the model, doc tests are added and automatically
run when the MM_model_nr_IH_inf.py code is run.


NUMBER-TO-FRACTION MODEL WITH EXTRA IH INFLUENCES: MM_model_nr_to_frac_IH_inf.py
MM_model_nr_to_frac_IH_inf.py uses the mathematical formulas from MM_model_numbers.py
to simulate the number dynamics and at the end, the numbers are converted to
fractions. Hence the shows the fraction dynamics of the four cell types MMd, MMr,
OCs and OBs in the MM microenvironment by a changing N. It contains code to make
the figures showing the effect of the WMMd IH, the MMd GF IH and a combination at
different administration periods and strengths on the cell type fractions. In
addition, it contains code to determine the drug administration amounts and periods
causing the lowest total MM fraction. Furthermore contains an optimisation strategy
to find the best holiday duration, administration duration and IH strength
simultaneously. The IHs not only affect the MMd but also the OC and OB.

TEST THE CODE
To test some of the functions in the model, doc tests are added and automatically
run when the MMMM_model_nr_to_frac_IH_inf.py code is run.

THE DATA
The folder data contains all the generated data that is used to make the figures.
and tables. This folder contains:
* reproduced_data_Sartakhti_nonlinear: contains all the data obtained with the
                          model based on the paper of Sartakhti et al., 2018.
* reproduced_data_Sartakhti_linear: contains all the data obtained with the model
                          based on the paper of Sartakhti et al., 2016.
* data_model_fractions: contains all the data obtained from the model simulating
                          cell type fractions.
* data_model_numbers: contains all the data obtained from the model simulating
                          cell type numbers.
* data_model_nr_to_frac: contains all the data obtained from the model simulating
                          cell type fractions by converting the numbers to
                          fractions.
* data_model_frac_IH_inf.py: contains all the data obtained from the model
                          simulating cell type fractions whereby extra IH
                          influences were added.
* data_model_nr_IH_inf.py: contains all the data obtained from the model simulating
                          cell type numbers whereby extra IH influences were added.
* data_model_nr_to_frac_IH_inf: contains all the data obtained from the model
                          simulating cell type fractions by converting the numbers
                          to fractions whereby also extra IH influences were added.

THE VISUALISATION
In the folder visualisation, all made figures are shown. This folder contains:
* reproduced_results_Sartakhti_nonlinear: contains all the reproduced figures of
                            the paper of Sartakhti et al., 2018.
* reproduced_results_Sartakhti_linear: contains all the reproduced figures of the
                            paper of Sartakhti et al., 2016.
* results_model_fractions: contains all the figures obtained from the model
                            simulating cell type fractions.
* results_model_numbers: contains all the figures obtained from the model
                            simulating cell type numbers.
* results_model_nr_to_frac: contains all the data obtained from the model
                            simulating cell type fractions by converting the
                            numbers to fractions.
* results_model_frac_IH_inf.py: contains all the figures obtained from the model
                            simulating cell type fractions whereby extra IH
                            influences were added.
* results_model_nr_IH_inf.py: contains all the figures obtained from the model
                            simulating cell type numbers whereby extra IH
                            influences were added.
* results_model_nr_to_frac_IH_inf: contains all the data obtained from the model
                            simulating cell type fractions by converting the
                            numbers to fractions whereby also extra IH influences
                            were added.

HOW TO RUN THE CODES
The nonlinear model and its visualisation, model_S_nonlinear.py:
        - python model_S_nonlinear.py

The linear model and its visualisation, model_S_linear.py:
        - python model_S_linear.py

Model with fractions, MM_model_fractions.py
        - python MM_model_fractions.py

Model with numbers, MM_model_numbers.py
        - python MM_model_numbers.py

Model where numbers are converted to fractions, MM_model_nr_to_frac.py
        - python MM_model_nr_to_frac.py

Fraction model with extra IH influences, MM_model_frac_IH_inf.py
        - python MM_model_frac_IH_inf.py

Number model with extra IH influences, MM_model_nr_IH_inf.py
        - python MM_model_nr_IH_inf.py

Number-to-fraction model with extra IH influences, MM_model_nr_to_frac_IH_inf.py
        - python MM_model_nr_to_frac_IH_inf.py



REFERENCES
* Sartakhti, J. S., Manshaei, M. H., & Archetti, M. (2018). Game Theory of tumourâ€“Stroma
  Interactions in Multiple Myeloma: Effect of nonlinear benefits. Games, 9(2), 32.
  https://doi.org/10.3390/g9020032
* Sartakhti, J. S., Manshaei, M. H., Bateni, S., & Archetti, M. (2016). Evolutionary
  dynamics of tumour-Stroma interactions in multiple myeloma. PLOS ONE, 11(12),
  e0168856. https://doi.org/10.1371/journal.pone.0168856
